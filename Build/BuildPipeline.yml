
trigger: none 
jobs:
- job: Build
  pool:
    name: Self
  variables:
    - group: keys
    - name: NUGET_PACKAGES
      value: $(Pipeline.Workspace)\.nuget\packages  
  steps:
    - checkout: self
    - task: AzurePowerShell@5
      name: Build
      inputs:
        errorActionPreference: stop
        azureSubscription: 'Visual Studio Enterprise(1)(b48a609a-17f6-4e48-a317-54ab77fbf822)'
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |
          $ErrorView="NormalView"
          "Nugetpackage=$env:Nuget_PACKAGES"
          $ErrorActionPreference="stop"
          $goArgs = @{
              GithubToken              = '$(GitHubToken)'
              AzureToken               = '$(AzureToken)' 
              GitHubUserName           = '$(GitHubUserName)' 
              DXApiFeed                = '$(DXApiFeed)'
              Branch                   = '$(Build.SourceBranchName)'
              SourcePath               = '$(System.DefaultworkingDirectory)'
              ArtifactStagingDirectory = '$(Build.Artifactstagingdirectory)'
              BinDirectory             = '$(System.DefaultworkingDirectory)\bin'
              CustomVersion            = '$(CustomVersion)'
              UseLastVersion           = '$(UseLastVersion)'
              XpandBlobOwnerSecret     = '$(XpandBlobOwnerSecret)'
              AzureApplicationId       = '$(AzureApplicationId)'
              AzureTenantId            = '$(AzureTenantId)'
          }
          "goArgs:"
          $goArgs | Out-String
          $env:AzureToken=$AzureToken
          $env:AzOrganization="eXpandDevops"
          $env:AzProject ="eXpandFramework"
          & '$(System.DefaultWorkingDirectory)\Build\BuildPipeline.ps1' @goArgs
    - publish: $(System.DefaultWorkingDirectory)\bin\net8.0
      artifact: TestAssemblies
    - publish: $(Pipeline.Workspace)\.nuget
      artifact: Nuget
    - task: PublishPipelineArtifact@1
      name: PublishNugets
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\bin\Nupkg'
        artifact: 'Nupkg'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      name: PublishZips
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\bin\zip'
        artifact: 'Zip'
        publishLocation: 'pipeline'           
- job: Tests
  dependsOn: Build
  condition: ne(variables['SkipTests'], 'True')
  strategy:
    matrix:
      ModelMapper:
        TestAssembly: '**/Xpand.XAF.Modules.ModelMapper.Tests.dll'
      OfficeDocumentStyleManager:
        TestAssembly: '**/Xpand.XAF.Modules.Office.DocumentStyleManager.Tests.dll'
      AutoCommit:
        TestAssembly: '**/Xpand.XAF.Modules.AutoCommit.Tests.dll'
      BulkObjectUpdate:
        TestAssembly: '**/Xpand.XAF.Modules.BulkObjectUpdate.Tests.dll'
      CloneMemberValue:
        TestAssembly: '**/Xpand.XAF.Modules.CloneMemberValue.Tests.dll'
      CloneModelView:
        TestAssembly: '**/Xpand.XAF.Modules.CloneModelView.Tests.dll'
      Email:
        TestAssembly: '**/Xpand.XAF.Modules.Email.Tests.dll'
      Extensions:
        TestAssembly: '**/Xpand.Extensions.Tests.dll'
      GridListEditor:
        TestAssembly: '**/Xpand.XAF.Modules.GridListEditor.Tests.dll'
      HideToolBar:
        TestAssembly: '**/Xpand.XAF.Modules.HideToolBar.Tests.dll'
      JobSchedulerHangfire:
        TestAssembly: '**/Xpand.XAF.Modules.JobScheduler.Hangfire.Tests.dll'
      # JobSchedulerNotification:
      #   TestAssembly: '**/Xpand.XAF.Modules.JobScheduler.Notification.Tests.dll'
      MasterDetail:
        TestAssembly: '**/Xpand.XAF.Modules.MasterDetail.Tests.dll'
      ModelViewInheritance:
        TestAssembly: '**/Xpand.XAF.Modules.ModelViewInheritance.Tests.dll'
      Reactive:
        TestAssembly: '**/Xpand.XAF.Modules.Reactive.Tests.dll'
      ReactiveLogger:
        TestAssembly: '**/Xpand.XAF.Modules.Reactive.Logger.Tests.dll'
      ReactiveLoggerHub:
        TestAssembly: '**/Xpand.XAF.Modules.Reactive.Logger.Hub.Tests.dll'
      ReactiveRest:
        TestAssembly: '**/Xpand.XAF.Modules.Reactive.Rest.Tests.dll'
      RefreshView:
        TestAssembly: '**/Xpand.XAF.Modules.RefreshView.Tests.dll'
      SuppressConfirmation:
        TestAssembly: '**/Xpand.XAF.Modules.SuppressConfirmation.Tests.dll'
      ViewEditMode:
        TestAssembly: '**/Xpand.XAF.Modules.ViewEditMode.Tests.dll'
      ViewItemValue:
        TestAssembly: '**/Xpand.XAF.Modules.ViewItemValue.Tests.dll'
  pool:
    name: Self
  variables:
  - group: keys
  - name: SOURCE_DIRECTORY
    value: '$(Build.SourcesDirectory)'
  steps:
    - checkout: Self
    - download: current
      artifact: TestAssemblies
    - download: current
      artifact: Nupkg
    - download: current
      artifact: Nuget
    - task: PowerShell@2
      displayName: 'Setup Environment'
      inputs:
        targetType: 'inline'
        script: |
          New-Item -ItemType Directory -Force -Path "$(Build.SourcesDirectory)/bin/nupkg"
          Copy-Item -Path "$(Pipeline.Workspace)/Nupkg/*.nupkg" -Destination "$(Build.SourcesDirectory)/bin/nupkg"
          Copy-Item -Path "$(Pipeline.Workspace)\Nuget" -Destination "$(Pipeline.Workspace)\.Nuget" -Recurse -Force

    - task: VSTest@2
      displayName: 'Run Tests'
      retryCountOnTaskFailure: 2
      env:
        SOURCE_DIRECTORY: "../s"
      inputs:
        minimumExpectedTests: "1"
        failOnMinTestsNotRun: true
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          $(TestAssembly)
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(Pipeline.Workspace)/TestAssemblies'
        # runSettingsFile: '$(SOURCE_DIRECTORY)\Build\Tests.runsettings'
- job: PostTestTasks
  dependsOn:
    - Tests
  condition: or(succeeded(), eq(dependencies.Tests.result, 'Skipped'))
  pool:
    name: Self
  variables:
    - group: keys
    - name: NUGET_PACKAGES
      value: $(Pipeline.Workspace)\.nuget\packages  
  steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $ErrorView="NormalView"
          $ErrorActionPreference="stop"
          $env:AzureToken='$(AzureToken)'
          $env:AzProject="eXpandFramework"
          $env:AzOrganization="eXpandDevOps"
          & '$(System.DefaultWorkingDirectory)\go.ps1' -InstallModules
          $xafMinors=Get-XAFLatestMinors -Source '$(DXApiFeed)'
          $xafMinor=$xafMinors|select-object -first 1
          $parameters = @{
            CustomVersion     = "$xafminor"
            DxPipelineBuildId = '$(Build.BuildId)'
          }
          $parameters
          Add-AzBuild -Definition PublishNugets-Reactive.XAF -Parameters $parameters -Branch $env:Build_SourceBranchName
          Write-Host "Hello World"
        failOnStderr: true
        ignoreLASTEXITCODE: true
        pwsh: true

       


