using System;
using DevExpress.ExpressApp;
using DevExpress.ExpressApp.DC;
using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp.Model.Core;
using DevExpress.ExpressApp.Utils;

namespace Xpand.Extensions.XAF.ModelExtensions{
    public static partial class ModelExtensions{
        public static IModelClass GetModelClass(this IModelApplication modelApplication, Type objectType){
            var model = modelApplication;
            IModelClass modelClass = null;
            if ((objectType != null) && model?.BOModel != null){
                ITypeInfo typeInfo = XafTypesInfo.Instance.FindTypeInfo(objectType);
                modelClass = model.BOModel.GetClass(typeInfo != null ? typeInfo.Type : objectType);
                if (modelClass == null){
                    var interfaceType = ModelAutoGeneratedRuleNodesHelper.GetAssociatedDomainComponentType(objectType);
                    if (interfaceType != null){
                        modelClass = model.BOModel.GetClass(interfaceType);
                    }
                }
            }

            return modelClass;
        }
        
        public static IModelClass GetModelClass(this ITypeInfo typeInfo) 
            => typeInfo.Type.GetModelClass();
        
        public static IModelClass GetModelClass(this Type type) 
            => CaptionHelper.ApplicationModel?.GetModelClass(type);
    }
}